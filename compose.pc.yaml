x-gpu-config:
  &gpu-config
  runtime: nvidia
  environment:
    - DISPLAY=${DISPLAY:?err}
    - NVIDIA_VISIBLE_DEVICES=all
    - NVIDIA_DRIVER_CAPABILITIES=all

x-cpu-config:
  &cpu-config
  environment:
    - DISPLAY=${DISPLAY:?err}
    - LIBGL_ALWAYS_SOFTWARE=1

services:

  image_decompressor:
    image: husarion/image-transport:humble
    command: >
      ros2 run image_transport republish ${CODEC:-theora} raw
      --ros-args
      --remap in/${CODEC:-theora}:=/camera/color/image_raw/${CODEC:-theora}
      --remap out:=/camera/my_image_raw

  # if you have NVDIA GPU and NVIDIA Container Toolkit, you can replace
  # "cpu-config" with "gpu-config"
  interface:
    image: husarion/image-tools:humble
    <<: [ *cpu-config ]
    container_name: interface
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    command: ros2 run image_tools showimage --ros-args -p reliability:=best_effort --remap image:=/camera/my_image_raw

  dds-router:
    image: husarnet/dds-router:topic-filtering
    network_mode: host
    environment:
      - DISCOVERY=CLIENT
      - DS_HOSTNAME=rosbot2r
      - DS_SERVER_ID=4
      - DS_CLIENT_ID=9
    volumes:
      - ./filter.yaml:/filter.yaml
    #   - ./config.client.template.yaml:/config.client.template.yaml
    #   - ./config.server.template.yaml:/config.server.template.yaml
    #   - ./config.wan.template.yaml:/config.wan.template.yaml
    #   - ./entrypoint.sh:/entrypoint.sh
    #   - ./config_daemon.sh:/config_daemon.sh

    # entrypoint: sleep 3600

  # joy2twist:
  #   image: husarion/joy2twist:humble
  #   <<: *net-config
  #   devices:
  #     - /dev/input
  #   volumes:
  #     - ./params/joy2twist.yaml:/params.yaml
  #   command: >
  #     ros2 launch joy2twist gamepad_controller.launch.py
  #       joy2twist_params_file:=/params.yaml